// ProductInputForm.test.tsx
import React from "react";
import { render, screen, fireEvent, waitFor } from "@testing-library/react";
import "@testing-library/jest-dom/extend-expect";
import ProductInputForm from "../ProductInputForm";

const mockProducts = [
  {
    id: 1,
    name: "Wireless Mouse",
    length: 10,
    width: 8,
    height: 5,
    weight: 0.5,
    quantity: 0,
  },
  {
    id: 2,
    name: "Gaming Keyboard",
    length: 45,
    width: 15,
    height: 4,
    weight: 1.5,
    quantity: 0,
  },
];

const mockOnAddProduct = jest.fn();

describe("ProductInputForm", () => {
  beforeEach(() => {
    render(
      <ProductInputForm
        products={mockProducts}
        onAddProduct={mockOnAddProduct}
      />
    );
  });

  it("should display a search input and a product list", () => {
    // Check if search input exists
    expect(
      screen.getByPlaceholderText("Search products...")
    ).toBeInTheDocument();

    // Check if products are displayed
    expect(screen.getByText("Wireless Mouse")).toBeInTheDocument();
    expect(screen.getByText("Gaming Keyboard")).toBeInTheDocument();
  });

  it("should call onAddProduct when a product is selected and added", async () => {
    fireEvent.change(screen.getByPlaceholderText("Search products..."), {
      target: { value: "Wireless Mouse" },
    });

    // Wait for filtered products
    await waitFor(() => screen.getByText("Wireless Mouse"));

    fireEvent.click(screen.getByText("Wireless Mouse"));
    fireEvent.change(screen.getByRole("spinbutton"), { target: { value: 2 } });

    fireEvent.click(screen.getByText("Add Product"));

    expect(mockOnAddProduct).toHaveBeenCalledTimes(1);
    expect(mockOnAddProduct).toHaveBeenCalledWith({
      id: 1,
      name: "Wireless Mouse",
      length: 10,
      width: 8,
      height: 5,
      weight: 0.5,
      quantity: 2,
    });
  });
});
